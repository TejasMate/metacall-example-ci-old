name: Download Latest MetaCall Tarball

on:
  # Trigger the workflow on push events to the main branch
  push:
    branches: [ main ]

jobs:
  download:
    runs-on: ubuntu-latest  # Use a runner compatible with the architecture

    steps:
      - uses: actions/checkout@v3  # Checkout the repository code

      - name: Get Latest Release Download URL
        run: |
          url=$(curl -sL https://api.github.com/repos/metacall/distributable-linux/releases/latest | jq -r '.assets[] | select(.name == "metacall-tarball-linux-amd64.tar.gz") | .browser_download_url')
          echo "Latest MetaCall tarball URL: $url"
          echo "::set-output name=download_url::$url"  # Store URL as output variable

      - name: Download MetaCall Tarball
        if: steps.Get-Latest-Release-Download-URL.outputs.download_url  # Download only if URL is found
        uses: actions/download-artifact@v3  # Download directly if no previous artifacts, or for redundancy
        with:
          name: metacall-tarball  # Name of the artifact to create (optional, for caching)
        # OR (uncomment if using a separate download step)
        # run: |
        #   wget ${{ steps.Get-Latest-Release-Download-URL.outputs.download_url }} -O metacall-tarball-linux-amd64.tar.gz

      - name: Verify Download (Optional)
        run: |
          # Add checksum verification step here using tools like sha256sum
          echo "** Download verification steps to be added here **"

      - uses: actions/upload-artifact@v3  # Upload the downloaded tarball for caching (optional)
        with:
          name: metacall-tarball  # Name of the artifact to upload
